public List<UploadData> uploadFiles(String server_path, List<Uri> all_the_files) {
        Log.d("NetworkManager", "Starting uploads");

        URL url = null;
        LinkedList<UploadData> output = new LinkedList<UploadData>();
        try {
            url = new URL(server_path);
        } catch (MalformedURLException e1) {
            e1.printStackTrace();
        }

        HttpURLConnection conn;
        InputStream stream = null;
        DataOutputStream request = null;

        try {
            if (isConnectedToInternet(c)) {

                if (url != null) {
                    conn = (HttpURLConnection) url.openConnection();
                } else {
                    //listen
                    return null;
                }

                String loc = conn.getHeaderField("Location");
                if (loc != null) {
                    server_path = loc; //needed?
                    url = new URL(loc);
                }
                conn = (HttpURLConnection) url.openConnection();

                conn.setRequestMethod("POST");
                conn.setUseCaches(false);
                conn.setDoInput(true);
                conn.setDoOutput(true);

                conn.setRequestProperty("User-Agent", "AndroTSH");
                conn.setRequestProperty("Expect", "100-continue");
                conn.setRequestProperty("Accept", "*/*");
                conn.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + RequestData.boundary);

                request = new DataOutputStream(conn.getOutputStream());
                request.writeBytes(RequestData.hyphens + RequestData.boundary + RequestData.crlf);

                //http://stackoverflow.com/questions/566462/upload-files-with-httpwebrequest-multipart-form-data
                RequestData rd = new RequestData(request, c.getContentResolver());
                for (Uri uuid: all_the_files) {
                    rd.addFile(uuid);
                }
                request.flush();
                stream = conn.getInputStream();

                if (stream != null) {
                    Log.d("NetworkManager", "Got response for uploads, reading now");
                    InputStreamReader isr = new InputStreamReader(stream);
                    BufferedReader br = new BufferedReader(isr);
                    boolean isReading = true;
                    String data;
                    String lastToken = null;
                    String lastServer = null;
                    boolean thisIsGroup = false;
                    Pattern p = Pattern.compile(String.format(FULL_SPLITTY, Pattern.quote(server_path)));

                    do {
                        try {
                            data = br.readLine();
                            if (data != null) {
                                Matcher m = p.matcher(data);
                                m.matches();
                                UploadData ud = new UploadData(m.group(1), m.group(2), m.group(3));
                                if (lastToken != null) {
                                    if (m.group(2).equals(lastToken)) {
                                        thisIsGroup = true;
                                    }
                                }
                                else {
                                    lastToken = m.group(2);
                                    lastServer = m.group(1);
                                }
                                output.add(ud);
                            }
                            else
                                isReading = false;
                        } catch (IOException e) {
                            e.printStackTrace();
                            isReading = false;
                        }
                    } while (isReading);

                    if (thisIsGroup) {
                        output.addFirst(new UploadData(lastServer, lastToken, null));
                    }


                    try {
                        request.close();
                        stream.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                Log.d("NetworkManager", "Finished uploads");
                return output;
            }
        }
        catch (IOException e) {
            //some error handling
            Log.d("NetworkManager", "Failed uploads: "+e.getMessage());
            return null;
        }

        return null;
    }

private void populateActivity() {
    sqlhelper.addUpload("https://transfer.sh", "DUrpD", "something.txt");
    sqlhelper.addUpload("https://transfer.sh", "HUrpD", "something.txt");
    sqlhelper.addUpload("https://transfer.sh", "LUrpD", null);
    sqlhelper.addUpload("https://transfer.sh", "LUrpD", "morethings.txt", 3, false);
    sqlhelper.addUpload("https://transfer.sh", "LUrpD", "morethings2.txt", 3, false);
}

//http://stackoverflow.com/questions/20067508/get-real-path-from-uri-android-kitkat-new-storage-access-framework
//https://github.com/iPaulPro/aFileChooser/blob/master/aFileChooser/src/com/ipaulpro/afilechooser/utils/FileUtils.java